version: '3.8'

services:
  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: seo-nlp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - seo-nlp-network

  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: seo-nlp-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - ENABLE_COST_OPTIMIZATION=true
      - ENABLE_CACHING=true
      - DEBUG=true
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src:ro
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - seo-nlp-network
    restart: unless-stopped

  # Redis Commander for Redis management (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: seo-nlp-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - seo-nlp-network
    profiles:
      - dev

volumes:
  redis_data:
    driver: local

networks:
  seo-nlp-network:
    driver: bridge
